<Application x:Class="SpeedRunTeleprompter.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SpeedRunTeleprompter"
             xmlns:prop="clr-namespace:SpeedRunTeleprompter.Settings"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <sys:String x:Key="WindowTitle">Teleprompter</sys:String>

        <FontFamily x:Key="FAsolid">/Fonts/FAsolid900.otf#Font Awesome 6 Free Solid</FontFamily>
        <FontFamily x:Key="FAbrands">/Fonts/FAbrands.otf#Font Awesome 6 Brands Regular</FontFamily>
        <FontFamily x:Key="FAregular">/Fonts/FAregular.otf#Font Awesome 6 Free Regular</FontFamily>

        <SolidColorBrush x:Key="DarkBackground" Color="#ff222222"/>
        <SolidColorBrush x:Key="DarkMenu" Color="#ff303030" />
        <SolidColorBrush x:Key="DarkForeground" Color="White"/>

        <SolidColorBrush x:Key="LightBackground" Color="White"/>
        <SolidColorBrush x:Key="LightMenu" Color="#d1dfe6" />
        <SolidColorBrush x:Key="LightForeground" Color="#ff373737"/>

        <SolidColorBrush x:Key="SystemColor" Color="{x:Static SystemParameters.WindowGlassColor}" />
        <Color x:Key="SystemColorColor">DeepSkyBlue</Color>

        <Color x:Key="ThemeAccentColorL" >#000</Color>
        <Color x:Key="ThemeAccentColorD" >#000</Color>
        <SolidColorBrush x:Key="ThemeBackground" Color="#000" />
        <SolidColorBrush x:Key="ThemeMenu" Color="#000" />
        <SolidColorBrush x:Key="ThemeForeground" Color="#000" />
        <SolidColorBrush x:Key="ThemeAccentD" Color="#000" />
        <SolidColorBrush x:Key="ThemeAccentL" Color="#000" />


        <!--Styles-->
        <!--======================================-->

        <!--TextBlock-->
        <!--======================================-->
        <Style x:Key="ModeTextBlock" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--ListBox-->
        <!--======================================-->
        <Style x:Key="LB_horizontal"
TargetType="ListBox">
            <Setter Property="SnapsToDevicePixels"
   Value="true" />
            <Setter Property="OverridesDefaultStyle"
   Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
   Value="Hidden" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
   Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
   Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" >
                            <ScrollViewer Margin="0" Focusable="false">
                                <WrapPanel Orientation="Horizontal" MaxWidth="{TemplateBinding ActualWidth}" Margin="2" IsItemsHost="True" HorizontalAlignment="Center"  />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Opacity" Value="0.65" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource DarkForeground}" />

                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--Container-->
        <!--=====================================-->
        <Style x:Key="Menu" TargetType="Grid">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource LightMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeMenu}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Background" TargetType="Grid">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="{DynamicResource DarkMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MenuSP" TargetType="StackPanel">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource LightMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeMenu}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BackgroundSP" TargetType="StackPanel">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="{DynamicResource DarkMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Stroke" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="#ff909090" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeForeground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Border" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                    <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                    <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource ThemeForeground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Bar" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                    <Setter Property="Background" Value="#ff282828" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                    <Setter Property="Background" Value="{DynamicResource LightMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeAccentD}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource ThemeForeground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BdrBackground" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="{DynamicResource DarkMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
